{
  "Jest Test": {
    "prefix": ["test:tpl"],
    "body": [
      "// import { ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} } from '@/frontend/data/usecases/${TM_FILENAME_BASE}'",
			"",
			"type SutTypes = {",
			"  sut: any",
			"}",
			"",
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} {",
			"  // constructor(private readonly name) {}",
			"",
			"  add(): SutTypes {",
			"    return {",
			"      sut: {}",
			"    }",
			"  }",
			"}",
			"",
			"const makeSut = (): SutTypes => {",
			"  const sut = new ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}()",
			"",
			"  return {",
			"    sut",
			"  }",
			"}",
			"",
			"describe('${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} SmokeTest UseCases', () => {",
			"  test('Should be exists a ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}', () => {",
			"    expect(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}).toBeDefined()",
			"  })",
			"",
			"  test('Should be exists a add method on ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}', () => {",
			"    const { sut } = makeSut()",
			"",
			"    expect(sut.add).toBeDefined()",
			"  })",
			"})",
			"",
			"describe('${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} UseCases', () => {",
			"  test('Should call ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} with correct params', () => {})",
			"})",
			""
    ],
    "description": "A describe block for Jest"
  },
  "React FC": {
    "prefix": ["rfc"],
    "body": [
      "import React from 'react'",
      "import Styles from './${TM_FILENAME_BASE}-styles.scss'",
      "",
      "const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} React.FC = () => {",
      "  return (",
      "    <div className={Styles.${TM_FILENAME_BASE/([a-z]*)[-]+([a-z]*)/$1${2:/capitalize}/g}Wrap}>",
      "",
      "    </div>",
      "  )",
      "}",
      "",
      "export default ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}",
      ""
    ],
    "description": "Boilerplate for React Function Component"
  }
}